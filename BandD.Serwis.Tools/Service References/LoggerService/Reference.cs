//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace BandD.Serwis.Tools.LoggerService {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="LoggerService.ILogger")]
    public interface ILogger {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILogger/SaveErrorToDataBase", ReplyAction="http://tempuri.org/ILogger/SaveErrorToDataBaseResponse")]
        void SaveErrorToDataBase(System.Guid applicationId, System.Guid clientId, string exeptionMessage, string methodNamesExeption, string methoNameCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILogger/SaveErrorToDataBase", ReplyAction="http://tempuri.org/ILogger/SaveErrorToDataBaseResponse")]
        System.Threading.Tasks.Task SaveErrorToDataBaseAsync(System.Guid applicationId, System.Guid clientId, string exeptionMessage, string methodNamesExeption, string methoNameCode);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ILoggerChannel : BandD.Serwis.Tools.LoggerService.ILogger, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class LoggerClient : System.ServiceModel.ClientBase<BandD.Serwis.Tools.LoggerService.ILogger>, BandD.Serwis.Tools.LoggerService.ILogger {
        
        public LoggerClient() {
        }
        
        public LoggerClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public LoggerClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public LoggerClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public LoggerClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public void SaveErrorToDataBase(System.Guid applicationId, System.Guid clientId, string exeptionMessage, string methodNamesExeption, string methoNameCode) {
            base.Channel.SaveErrorToDataBase(applicationId, clientId, exeptionMessage, methodNamesExeption, methoNameCode);
        }
        
        public System.Threading.Tasks.Task SaveErrorToDataBaseAsync(System.Guid applicationId, System.Guid clientId, string exeptionMessage, string methodNamesExeption, string methoNameCode) {
            return base.Channel.SaveErrorToDataBaseAsync(applicationId, clientId, exeptionMessage, methodNamesExeption, methoNameCode);
        }
    }
}
