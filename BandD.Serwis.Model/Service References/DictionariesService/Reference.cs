//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace BandD.Serwis.Model.DictionariesService {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="DictionariesService.IDictionariesService")]
    public interface IDictionariesService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDictionariesService/Autorauthorization", ReplyAction="http://tempuri.org/IDictionariesService/AutorauthorizationResponse")]
        bool Autorauthorization(string password, string userName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDictionariesService/Autorauthorization", ReplyAction="http://tempuri.org/IDictionariesService/AutorauthorizationResponse")]
        System.Threading.Tasks.Task<bool> AutorauthorizationAsync(string password, string userName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDictionariesService/getDataFromUser", ReplyAction="http://tempuri.org/IDictionariesService/getDataFromUserResponse")]
        BandD.Serwis.Domain.User[] getDataFromUser(string name, System.Nullable<bool> status, string role);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDictionariesService/getDataFromUser", ReplyAction="http://tempuri.org/IDictionariesService/getDataFromUserResponse")]
        System.Threading.Tasks.Task<BandD.Serwis.Domain.User[]> getDataFromUserAsync(string name, System.Nullable<bool> status, string role);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDictionariesService/removeElementFromUsers", ReplyAction="http://tempuri.org/IDictionariesService/removeElementFromUsersResponse")]
        void removeElementFromUsers(System.Guid id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDictionariesService/removeElementFromUsers", ReplyAction="http://tempuri.org/IDictionariesService/removeElementFromUsersResponse")]
        System.Threading.Tasks.Task removeElementFromUsersAsync(System.Guid id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDictionariesService/addElementToUsers", ReplyAction="http://tempuri.org/IDictionariesService/addElementToUsersResponse")]
        void addElementToUsers(BandD.Serwis.Domain.User element);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDictionariesService/addElementToUsers", ReplyAction="http://tempuri.org/IDictionariesService/addElementToUsersResponse")]
        System.Threading.Tasks.Task addElementToUsersAsync(BandD.Serwis.Domain.User element);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDictionariesService/updateElementUsers", ReplyAction="http://tempuri.org/IDictionariesService/updateElementUsersResponse")]
        void updateElementUsers(BandD.Serwis.Domain.User element);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDictionariesService/updateElementUsers", ReplyAction="http://tempuri.org/IDictionariesService/updateElementUsersResponse")]
        System.Threading.Tasks.Task updateElementUsersAsync(BandD.Serwis.Domain.User element);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDictionariesService/getDataFromSlOrderStat", ReplyAction="http://tempuri.org/IDictionariesService/getDataFromSlOrderStatResponse")]
        BandD.Serwis.Domain.SlOrderStat[] getDataFromSlOrderStat(string name, System.Nullable<bool> activity);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDictionariesService/getDataFromSlOrderStat", ReplyAction="http://tempuri.org/IDictionariesService/getDataFromSlOrderStatResponse")]
        System.Threading.Tasks.Task<BandD.Serwis.Domain.SlOrderStat[]> getDataFromSlOrderStatAsync(string name, System.Nullable<bool> activity);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDictionariesService/removeElementFromSlOrderStat", ReplyAction="http://tempuri.org/IDictionariesService/removeElementFromSlOrderStatResponse")]
        void removeElementFromSlOrderStat(System.Guid id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDictionariesService/removeElementFromSlOrderStat", ReplyAction="http://tempuri.org/IDictionariesService/removeElementFromSlOrderStatResponse")]
        System.Threading.Tasks.Task removeElementFromSlOrderStatAsync(System.Guid id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDictionariesService/addElementToSlOrderStat", ReplyAction="http://tempuri.org/IDictionariesService/addElementToSlOrderStatResponse")]
        void addElementToSlOrderStat(BandD.Serwis.Domain.SlOrderStat element);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDictionariesService/addElementToSlOrderStat", ReplyAction="http://tempuri.org/IDictionariesService/addElementToSlOrderStatResponse")]
        System.Threading.Tasks.Task addElementToSlOrderStatAsync(BandD.Serwis.Domain.SlOrderStat element);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDictionariesService/updateElementSlOrderStat", ReplyAction="http://tempuri.org/IDictionariesService/updateElementSlOrderStatResponse")]
        void updateElementSlOrderStat(BandD.Serwis.Domain.SlOrderStat element);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDictionariesService/updateElementSlOrderStat", ReplyAction="http://tempuri.org/IDictionariesService/updateElementSlOrderStatResponse")]
        System.Threading.Tasks.Task updateElementSlOrderStatAsync(BandD.Serwis.Domain.SlOrderStat element);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDictionariesService/getDataFromSlCarrierStat", ReplyAction="http://tempuri.org/IDictionariesService/getDataFromSlCarrierStatResponse")]
        BandD.Serwis.Domain.Dictionaries.SlCarrierStat[] getDataFromSlCarrierStat(string name, System.Nullable<bool> carrierStatus);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDictionariesService/getDataFromSlCarrierStat", ReplyAction="http://tempuri.org/IDictionariesService/getDataFromSlCarrierStatResponse")]
        System.Threading.Tasks.Task<BandD.Serwis.Domain.Dictionaries.SlCarrierStat[]> getDataFromSlCarrierStatAsync(string name, System.Nullable<bool> carrierStatus);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDictionariesService/updateElementSlCarrierStat", ReplyAction="http://tempuri.org/IDictionariesService/updateElementSlCarrierStatResponse")]
        void updateElementSlCarrierStat(BandD.Serwis.Domain.Dictionaries.SlCarrierStat stats);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDictionariesService/updateElementSlCarrierStat", ReplyAction="http://tempuri.org/IDictionariesService/updateElementSlCarrierStatResponse")]
        System.Threading.Tasks.Task updateElementSlCarrierStatAsync(BandD.Serwis.Domain.Dictionaries.SlCarrierStat stats);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDictionariesService/addElementToSlCarrierStat", ReplyAction="http://tempuri.org/IDictionariesService/addElementToSlCarrierStatResponse")]
        void addElementToSlCarrierStat(BandD.Serwis.Domain.Dictionaries.SlCarrierStat stats);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDictionariesService/addElementToSlCarrierStat", ReplyAction="http://tempuri.org/IDictionariesService/addElementToSlCarrierStatResponse")]
        System.Threading.Tasks.Task addElementToSlCarrierStatAsync(BandD.Serwis.Domain.Dictionaries.SlCarrierStat stats);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDictionariesService/removeElementFromSlCarrierStat", ReplyAction="http://tempuri.org/IDictionariesService/removeElementFromSlCarrierStatResponse")]
        void removeElementFromSlCarrierStat(System.Guid statsId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDictionariesService/removeElementFromSlCarrierStat", ReplyAction="http://tempuri.org/IDictionariesService/removeElementFromSlCarrierStatResponse")]
        System.Threading.Tasks.Task removeElementFromSlCarrierStatAsync(System.Guid statsId);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IDictionariesServiceChannel : BandD.Serwis.Model.DictionariesService.IDictionariesService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class DictionariesServiceClient : System.ServiceModel.ClientBase<BandD.Serwis.Model.DictionariesService.IDictionariesService>, BandD.Serwis.Model.DictionariesService.IDictionariesService {
        
        public DictionariesServiceClient() {
        }
        
        public DictionariesServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public DictionariesServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public DictionariesServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public DictionariesServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public bool Autorauthorization(string password, string userName) {
            return base.Channel.Autorauthorization(password, userName);
        }
        
        public System.Threading.Tasks.Task<bool> AutorauthorizationAsync(string password, string userName) {
            return base.Channel.AutorauthorizationAsync(password, userName);
        }
        
        public BandD.Serwis.Domain.User[] getDataFromUser(string name, System.Nullable<bool> status, string role) {
            return base.Channel.getDataFromUser(name, status, role);
        }
        
        public System.Threading.Tasks.Task<BandD.Serwis.Domain.User[]> getDataFromUserAsync(string name, System.Nullable<bool> status, string role) {
            return base.Channel.getDataFromUserAsync(name, status, role);
        }
        
        public void removeElementFromUsers(System.Guid id) {
            base.Channel.removeElementFromUsers(id);
        }
        
        public System.Threading.Tasks.Task removeElementFromUsersAsync(System.Guid id) {
            return base.Channel.removeElementFromUsersAsync(id);
        }
        
        public void addElementToUsers(BandD.Serwis.Domain.User element) {
            base.Channel.addElementToUsers(element);
        }
        
        public System.Threading.Tasks.Task addElementToUsersAsync(BandD.Serwis.Domain.User element) {
            return base.Channel.addElementToUsersAsync(element);
        }
        
        public void updateElementUsers(BandD.Serwis.Domain.User element) {
            base.Channel.updateElementUsers(element);
        }
        
        public System.Threading.Tasks.Task updateElementUsersAsync(BandD.Serwis.Domain.User element) {
            return base.Channel.updateElementUsersAsync(element);
        }
        
        public BandD.Serwis.Domain.SlOrderStat[] getDataFromSlOrderStat(string name, System.Nullable<bool> activity) {
            return base.Channel.getDataFromSlOrderStat(name, activity);
        }
        
        public System.Threading.Tasks.Task<BandD.Serwis.Domain.SlOrderStat[]> getDataFromSlOrderStatAsync(string name, System.Nullable<bool> activity) {
            return base.Channel.getDataFromSlOrderStatAsync(name, activity);
        }
        
        public void removeElementFromSlOrderStat(System.Guid id) {
            base.Channel.removeElementFromSlOrderStat(id);
        }
        
        public System.Threading.Tasks.Task removeElementFromSlOrderStatAsync(System.Guid id) {
            return base.Channel.removeElementFromSlOrderStatAsync(id);
        }
        
        public void addElementToSlOrderStat(BandD.Serwis.Domain.SlOrderStat element) {
            base.Channel.addElementToSlOrderStat(element);
        }
        
        public System.Threading.Tasks.Task addElementToSlOrderStatAsync(BandD.Serwis.Domain.SlOrderStat element) {
            return base.Channel.addElementToSlOrderStatAsync(element);
        }
        
        public void updateElementSlOrderStat(BandD.Serwis.Domain.SlOrderStat element) {
            base.Channel.updateElementSlOrderStat(element);
        }
        
        public System.Threading.Tasks.Task updateElementSlOrderStatAsync(BandD.Serwis.Domain.SlOrderStat element) {
            return base.Channel.updateElementSlOrderStatAsync(element);
        }
        
        public BandD.Serwis.Domain.Dictionaries.SlCarrierStat[] getDataFromSlCarrierStat(string name, System.Nullable<bool> carrierStatus) {
            return base.Channel.getDataFromSlCarrierStat(name, carrierStatus);
        }
        
        public System.Threading.Tasks.Task<BandD.Serwis.Domain.Dictionaries.SlCarrierStat[]> getDataFromSlCarrierStatAsync(string name, System.Nullable<bool> carrierStatus) {
            return base.Channel.getDataFromSlCarrierStatAsync(name, carrierStatus);
        }
        
        public void updateElementSlCarrierStat(BandD.Serwis.Domain.Dictionaries.SlCarrierStat stats) {
            base.Channel.updateElementSlCarrierStat(stats);
        }
        
        public System.Threading.Tasks.Task updateElementSlCarrierStatAsync(BandD.Serwis.Domain.Dictionaries.SlCarrierStat stats) {
            return base.Channel.updateElementSlCarrierStatAsync(stats);
        }
        
        public void addElementToSlCarrierStat(BandD.Serwis.Domain.Dictionaries.SlCarrierStat stats) {
            base.Channel.addElementToSlCarrierStat(stats);
        }
        
        public System.Threading.Tasks.Task addElementToSlCarrierStatAsync(BandD.Serwis.Domain.Dictionaries.SlCarrierStat stats) {
            return base.Channel.addElementToSlCarrierStatAsync(stats);
        }
        
        public void removeElementFromSlCarrierStat(System.Guid statsId) {
            base.Channel.removeElementFromSlCarrierStat(statsId);
        }
        
        public System.Threading.Tasks.Task removeElementFromSlCarrierStatAsync(System.Guid statsId) {
            return base.Channel.removeElementFromSlCarrierStatAsync(statsId);
        }
    }
}
