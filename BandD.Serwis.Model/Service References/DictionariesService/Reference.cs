//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;

namespace BandD.Serwis.Model.DictionariesService {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="DictionariesService.IDictionariesService")]
    public interface IDictionariesService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDictionariesService/Autorauthorization", ReplyAction="http://tempuri.org/IDictionariesService/AutorauthorizationResponse")]
        bool Autorauthorization(string password, string userName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDictionariesService/Autorauthorization", ReplyAction="http://tempuri.org/IDictionariesService/AutorauthorizationResponse")]
        System.Threading.Tasks.Task<bool> AutorauthorizationAsync(string password, string userName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDictionariesService/getDataFromUser", ReplyAction="http://tempuri.org/IDictionariesService/getDataFromUserResponse")]
        BandD.Serwis.Domain.User[] getDataFromUser(string name, bool status, string role);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDictionariesService/getDataFromUser", ReplyAction="http://tempuri.org/IDictionariesService/getDataFromUserResponse")]
        System.Threading.Tasks.Task<BandD.Serwis.Domain.User[]> getDataFromUserAsync(string name, bool status, string role);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDictionariesService/getDataFromSlOrderStat", ReplyAction="http://tempuri.org/IDictionariesService/getDataFromSlOrderStatResponse")]
        BandD.Serwis.Domain.SlOrderStat[] getDataFromSlOrderStat(string name, bool activity);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDictionariesService/getDataFromSlOrderStat", ReplyAction="http://tempuri.org/IDictionariesService/getDataFromSlOrderStatResponse")]
        System.Threading.Tasks.Task<BandD.Serwis.Domain.SlOrderStat[]> getDataFromSlOrderStatAsync(string name, bool activity);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IDictionariesServiceChannel : BandD.Serwis.Model.DictionariesService.IDictionariesService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class DictionariesServiceClient : System.ServiceModel.ClientBase<BandD.Serwis.Model.DictionariesService.IDictionariesService>, BandD.Serwis.Model.DictionariesService.IDictionariesService {
        
        public DictionariesServiceClient() {
        }
        
        public DictionariesServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public DictionariesServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public DictionariesServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public DictionariesServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public bool Autorauthorization(string password, string userName) {
            return base.Channel.Autorauthorization(password, userName);
        }
        
        public System.Threading.Tasks.Task<bool> AutorauthorizationAsync(string password, string userName) {
            return base.Channel.AutorauthorizationAsync(password, userName);
        }
        
        public BandD.Serwis.Domain.User[] getDataFromUser(string name, bool status, string role) {
            return base.Channel.getDataFromUser(name, status, role);
        }
        
        public System.Threading.Tasks.Task<BandD.Serwis.Domain.User[]> getDataFromUserAsync(string name, bool status, string role) {
            return base.Channel.getDataFromUserAsync(name, status, role);
        }
        
        public BandD.Serwis.Domain.SlOrderStat[] getDataFromSlOrderStat(string name, bool activity) {
            return base.Channel.getDataFromSlOrderStat(name, activity);
        }
        
        public System.Threading.Tasks.Task<BandD.Serwis.Domain.SlOrderStat[]> getDataFromSlOrderStatAsync(string name, bool activity) {
            return base.Channel.getDataFromSlOrderStatAsync(name, activity);
        }

    }
}
