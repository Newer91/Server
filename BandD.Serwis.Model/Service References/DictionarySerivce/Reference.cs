//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace BandD.Serwis.Model.DictionarySerivce {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="DictionarySerivce.IDictionariesService")]
    public interface IDictionariesService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDictionariesService/Autorauthorization", ReplyAction="http://tempuri.org/IDictionariesService/AutorauthorizationResponse")]
        bool Autorauthorization(string password, string userName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDictionariesService/Autorauthorization", ReplyAction="http://tempuri.org/IDictionariesService/AutorauthorizationResponse")]
        System.Threading.Tasks.Task<bool> AutorauthorizationAsync(string password, string userName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDictionariesService/GetDataFromUser", ReplyAction="http://tempuri.org/IDictionariesService/GetDataFromUserResponse")]
        BandD.Serwis.ClassViewModel.Dictionaries.UserView[] GetDataFromUser(string name, System.Nullable<bool> status, System.Nullable<System.Guid> role);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDictionariesService/GetDataFromUser", ReplyAction="http://tempuri.org/IDictionariesService/GetDataFromUserResponse")]
        System.Threading.Tasks.Task<BandD.Serwis.ClassViewModel.Dictionaries.UserView[]> GetDataFromUserAsync(string name, System.Nullable<bool> status, System.Nullable<System.Guid> role);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDictionariesService/RemoveElementFromUsers", ReplyAction="http://tempuri.org/IDictionariesService/RemoveElementFromUsersResponse")]
        bool RemoveElementFromUsers(System.Guid id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDictionariesService/RemoveElementFromUsers", ReplyAction="http://tempuri.org/IDictionariesService/RemoveElementFromUsersResponse")]
        System.Threading.Tasks.Task<bool> RemoveElementFromUsersAsync(System.Guid id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDictionariesService/AddElementToUsers", ReplyAction="http://tempuri.org/IDictionariesService/AddElementToUsersResponse")]
        bool AddElementToUsers(BandD.Serwis.ClassViewModel.Dictionaries.UserView element);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDictionariesService/AddElementToUsers", ReplyAction="http://tempuri.org/IDictionariesService/AddElementToUsersResponse")]
        System.Threading.Tasks.Task<bool> AddElementToUsersAsync(BandD.Serwis.ClassViewModel.Dictionaries.UserView element);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDictionariesService/UpdateElementUsers", ReplyAction="http://tempuri.org/IDictionariesService/UpdateElementUsersResponse")]
        bool UpdateElementUsers(BandD.Serwis.ClassViewModel.Dictionaries.UserView element);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDictionariesService/UpdateElementUsers", ReplyAction="http://tempuri.org/IDictionariesService/UpdateElementUsersResponse")]
        System.Threading.Tasks.Task<bool> UpdateElementUsersAsync(BandD.Serwis.ClassViewModel.Dictionaries.UserView element);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDictionariesService/GetDataFromSlOrderStat", ReplyAction="http://tempuri.org/IDictionariesService/GetDataFromSlOrderStatResponse")]
        BandD.Serwis.ClassViewModel.Dictionaries.SlOrderStatView[] GetDataFromSlOrderStat(string name, System.Nullable<bool> activity);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDictionariesService/GetDataFromSlOrderStat", ReplyAction="http://tempuri.org/IDictionariesService/GetDataFromSlOrderStatResponse")]
        System.Threading.Tasks.Task<BandD.Serwis.ClassViewModel.Dictionaries.SlOrderStatView[]> GetDataFromSlOrderStatAsync(string name, System.Nullable<bool> activity);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDictionariesService/RemoveElementFromSlOrderStat", ReplyAction="http://tempuri.org/IDictionariesService/RemoveElementFromSlOrderStatResponse")]
        bool RemoveElementFromSlOrderStat(System.Guid id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDictionariesService/RemoveElementFromSlOrderStat", ReplyAction="http://tempuri.org/IDictionariesService/RemoveElementFromSlOrderStatResponse")]
        System.Threading.Tasks.Task<bool> RemoveElementFromSlOrderStatAsync(System.Guid id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDictionariesService/AddElementToSlOrderStat", ReplyAction="http://tempuri.org/IDictionariesService/AddElementToSlOrderStatResponse")]
        bool AddElementToSlOrderStat(BandD.Serwis.ClassViewModel.Dictionaries.SlOrderStatView element);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDictionariesService/AddElementToSlOrderStat", ReplyAction="http://tempuri.org/IDictionariesService/AddElementToSlOrderStatResponse")]
        System.Threading.Tasks.Task<bool> AddElementToSlOrderStatAsync(BandD.Serwis.ClassViewModel.Dictionaries.SlOrderStatView element);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDictionariesService/UpdateElementSlOrderStat", ReplyAction="http://tempuri.org/IDictionariesService/UpdateElementSlOrderStatResponse")]
        bool UpdateElementSlOrderStat(BandD.Serwis.ClassViewModel.Dictionaries.SlOrderStatView element);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDictionariesService/UpdateElementSlOrderStat", ReplyAction="http://tempuri.org/IDictionariesService/UpdateElementSlOrderStatResponse")]
        System.Threading.Tasks.Task<bool> UpdateElementSlOrderStatAsync(BandD.Serwis.ClassViewModel.Dictionaries.SlOrderStatView element);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDictionariesService/GetDataFromSlCarrierStat", ReplyAction="http://tempuri.org/IDictionariesService/GetDataFromSlCarrierStatResponse")]
        BandD.Serwis.ClassViewModel.Dictionaries.SlCarriersStatView[] GetDataFromSlCarrierStat(string name, System.Nullable<bool> carrierStatus);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDictionariesService/GetDataFromSlCarrierStat", ReplyAction="http://tempuri.org/IDictionariesService/GetDataFromSlCarrierStatResponse")]
        System.Threading.Tasks.Task<BandD.Serwis.ClassViewModel.Dictionaries.SlCarriersStatView[]> GetDataFromSlCarrierStatAsync(string name, System.Nullable<bool> carrierStatus);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDictionariesService/UpdateElementSlCarrierStat", ReplyAction="http://tempuri.org/IDictionariesService/UpdateElementSlCarrierStatResponse")]
        bool UpdateElementSlCarrierStat(BandD.Serwis.ClassViewModel.Dictionaries.SlCarriersStatView stats);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDictionariesService/UpdateElementSlCarrierStat", ReplyAction="http://tempuri.org/IDictionariesService/UpdateElementSlCarrierStatResponse")]
        System.Threading.Tasks.Task<bool> UpdateElementSlCarrierStatAsync(BandD.Serwis.ClassViewModel.Dictionaries.SlCarriersStatView stats);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDictionariesService/AddElementToSlCarrierStat", ReplyAction="http://tempuri.org/IDictionariesService/AddElementToSlCarrierStatResponse")]
        bool AddElementToSlCarrierStat(BandD.Serwis.ClassViewModel.Dictionaries.SlCarriersStatView stats);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDictionariesService/AddElementToSlCarrierStat", ReplyAction="http://tempuri.org/IDictionariesService/AddElementToSlCarrierStatResponse")]
        System.Threading.Tasks.Task<bool> AddElementToSlCarrierStatAsync(BandD.Serwis.ClassViewModel.Dictionaries.SlCarriersStatView stats);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDictionariesService/RemoveElementFromSlCarrierStat", ReplyAction="http://tempuri.org/IDictionariesService/RemoveElementFromSlCarrierStatResponse")]
        bool RemoveElementFromSlCarrierStat(System.Guid statsId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDictionariesService/RemoveElementFromSlCarrierStat", ReplyAction="http://tempuri.org/IDictionariesService/RemoveElementFromSlCarrierStatResponse")]
        System.Threading.Tasks.Task<bool> RemoveElementFromSlCarrierStatAsync(System.Guid statsId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDictionariesService/GetAllRoles", ReplyAction="http://tempuri.org/IDictionariesService/GetAllRolesResponse")]
        BandD.Serwis.ClassViewModel.Dictionaries.SlRoleView[] GetAllRoles(bool isAll);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDictionariesService/GetAllRoles", ReplyAction="http://tempuri.org/IDictionariesService/GetAllRolesResponse")]
        System.Threading.Tasks.Task<BandD.Serwis.ClassViewModel.Dictionaries.SlRoleView[]> GetAllRolesAsync(bool isAll);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDictionariesService/GetDataFromRole", ReplyAction="http://tempuri.org/IDictionariesService/GetDataFromRoleResponse")]
        BandD.Serwis.ClassViewModel.Dictionaries.SlRoleView[] GetDataFromRole(string name, System.Nullable<bool> status);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDictionariesService/GetDataFromRole", ReplyAction="http://tempuri.org/IDictionariesService/GetDataFromRoleResponse")]
        System.Threading.Tasks.Task<BandD.Serwis.ClassViewModel.Dictionaries.SlRoleView[]> GetDataFromRoleAsync(string name, System.Nullable<bool> status);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDictionariesService/RemoveElementFromRole", ReplyAction="http://tempuri.org/IDictionariesService/RemoveElementFromRoleResponse")]
        bool RemoveElementFromRole(System.Guid id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDictionariesService/RemoveElementFromRole", ReplyAction="http://tempuri.org/IDictionariesService/RemoveElementFromRoleResponse")]
        System.Threading.Tasks.Task<bool> RemoveElementFromRoleAsync(System.Guid id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDictionariesService/UpdateElementSlRole", ReplyAction="http://tempuri.org/IDictionariesService/UpdateElementSlRoleResponse")]
        bool UpdateElementSlRole(BandD.Serwis.ClassViewModel.Dictionaries.SlRoleView role);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDictionariesService/UpdateElementSlRole", ReplyAction="http://tempuri.org/IDictionariesService/UpdateElementSlRoleResponse")]
        System.Threading.Tasks.Task<bool> UpdateElementSlRoleAsync(BandD.Serwis.ClassViewModel.Dictionaries.SlRoleView role);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDictionariesService/AddElementToSlRole", ReplyAction="http://tempuri.org/IDictionariesService/AddElementToSlRoleResponse")]
        bool AddElementToSlRole(BandD.Serwis.ClassViewModel.Dictionaries.SlRoleView role);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDictionariesService/AddElementToSlRole", ReplyAction="http://tempuri.org/IDictionariesService/AddElementToSlRoleResponse")]
        System.Threading.Tasks.Task<bool> AddElementToSlRoleAsync(BandD.Serwis.ClassViewModel.Dictionaries.SlRoleView role);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IDictionariesServiceChannel : BandD.Serwis.Model.DictionarySerivce.IDictionariesService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class DictionariesServiceClient : System.ServiceModel.ClientBase<BandD.Serwis.Model.DictionarySerivce.IDictionariesService>, BandD.Serwis.Model.DictionarySerivce.IDictionariesService {
        
        public DictionariesServiceClient() {
        }
        
        public DictionariesServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public DictionariesServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public DictionariesServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public DictionariesServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public bool Autorauthorization(string password, string userName) {
            return base.Channel.Autorauthorization(password, userName);
        }
        
        public System.Threading.Tasks.Task<bool> AutorauthorizationAsync(string password, string userName) {
            return base.Channel.AutorauthorizationAsync(password, userName);
        }
        
        public BandD.Serwis.ClassViewModel.Dictionaries.UserView[] GetDataFromUser(string name, System.Nullable<bool> status, System.Nullable<System.Guid> role) {
            return base.Channel.GetDataFromUser(name, status, role);
        }
        
        public System.Threading.Tasks.Task<BandD.Serwis.ClassViewModel.Dictionaries.UserView[]> GetDataFromUserAsync(string name, System.Nullable<bool> status, System.Nullable<System.Guid> role) {
            return base.Channel.GetDataFromUserAsync(name, status, role);
        }
        
        public bool RemoveElementFromUsers(System.Guid id) {
            return base.Channel.RemoveElementFromUsers(id);
        }
        
        public System.Threading.Tasks.Task<bool> RemoveElementFromUsersAsync(System.Guid id) {
            return base.Channel.RemoveElementFromUsersAsync(id);
        }
        
        public bool AddElementToUsers(BandD.Serwis.ClassViewModel.Dictionaries.UserView element) {
            return base.Channel.AddElementToUsers(element);
        }
        
        public System.Threading.Tasks.Task<bool> AddElementToUsersAsync(BandD.Serwis.ClassViewModel.Dictionaries.UserView element) {
            return base.Channel.AddElementToUsersAsync(element);
        }
        
        public bool UpdateElementUsers(BandD.Serwis.ClassViewModel.Dictionaries.UserView element) {
            return base.Channel.UpdateElementUsers(element);
        }
        
        public System.Threading.Tasks.Task<bool> UpdateElementUsersAsync(BandD.Serwis.ClassViewModel.Dictionaries.UserView element) {
            return base.Channel.UpdateElementUsersAsync(element);
        }
        
        public BandD.Serwis.ClassViewModel.Dictionaries.SlOrderStatView[] GetDataFromSlOrderStat(string name, System.Nullable<bool> activity) {
            return base.Channel.GetDataFromSlOrderStat(name, activity);
        }
        
        public System.Threading.Tasks.Task<BandD.Serwis.ClassViewModel.Dictionaries.SlOrderStatView[]> GetDataFromSlOrderStatAsync(string name, System.Nullable<bool> activity) {
            return base.Channel.GetDataFromSlOrderStatAsync(name, activity);
        }
        
        public bool RemoveElementFromSlOrderStat(System.Guid id) {
            return base.Channel.RemoveElementFromSlOrderStat(id);
        }
        
        public System.Threading.Tasks.Task<bool> RemoveElementFromSlOrderStatAsync(System.Guid id) {
            return base.Channel.RemoveElementFromSlOrderStatAsync(id);
        }
        
        public bool AddElementToSlOrderStat(BandD.Serwis.ClassViewModel.Dictionaries.SlOrderStatView element) {
            return base.Channel.AddElementToSlOrderStat(element);
        }
        
        public System.Threading.Tasks.Task<bool> AddElementToSlOrderStatAsync(BandD.Serwis.ClassViewModel.Dictionaries.SlOrderStatView element) {
            return base.Channel.AddElementToSlOrderStatAsync(element);
        }
        
        public bool UpdateElementSlOrderStat(BandD.Serwis.ClassViewModel.Dictionaries.SlOrderStatView element) {
            return base.Channel.UpdateElementSlOrderStat(element);
        }
        
        public System.Threading.Tasks.Task<bool> UpdateElementSlOrderStatAsync(BandD.Serwis.ClassViewModel.Dictionaries.SlOrderStatView element) {
            return base.Channel.UpdateElementSlOrderStatAsync(element);
        }
        
        public BandD.Serwis.ClassViewModel.Dictionaries.SlCarriersStatView[] GetDataFromSlCarrierStat(string name, System.Nullable<bool> carrierStatus) {
            return base.Channel.GetDataFromSlCarrierStat(name, carrierStatus);
        }
        
        public System.Threading.Tasks.Task<BandD.Serwis.ClassViewModel.Dictionaries.SlCarriersStatView[]> GetDataFromSlCarrierStatAsync(string name, System.Nullable<bool> carrierStatus) {
            return base.Channel.GetDataFromSlCarrierStatAsync(name, carrierStatus);
        }
        
        public bool UpdateElementSlCarrierStat(BandD.Serwis.ClassViewModel.Dictionaries.SlCarriersStatView stats) {
            return base.Channel.UpdateElementSlCarrierStat(stats);
        }
        
        public System.Threading.Tasks.Task<bool> UpdateElementSlCarrierStatAsync(BandD.Serwis.ClassViewModel.Dictionaries.SlCarriersStatView stats) {
            return base.Channel.UpdateElementSlCarrierStatAsync(stats);
        }
        
        public bool AddElementToSlCarrierStat(BandD.Serwis.ClassViewModel.Dictionaries.SlCarriersStatView stats) {
            return base.Channel.AddElementToSlCarrierStat(stats);
        }
        
        public System.Threading.Tasks.Task<bool> AddElementToSlCarrierStatAsync(BandD.Serwis.ClassViewModel.Dictionaries.SlCarriersStatView stats) {
            return base.Channel.AddElementToSlCarrierStatAsync(stats);
        }
        
        public bool RemoveElementFromSlCarrierStat(System.Guid statsId) {
            return base.Channel.RemoveElementFromSlCarrierStat(statsId);
        }
        
        public System.Threading.Tasks.Task<bool> RemoveElementFromSlCarrierStatAsync(System.Guid statsId) {
            return base.Channel.RemoveElementFromSlCarrierStatAsync(statsId);
        }
        
        public BandD.Serwis.ClassViewModel.Dictionaries.SlRoleView[] GetAllRoles(bool isAll) {
            return base.Channel.GetAllRoles(isAll);
        }
        
        public System.Threading.Tasks.Task<BandD.Serwis.ClassViewModel.Dictionaries.SlRoleView[]> GetAllRolesAsync(bool isAll) {
            return base.Channel.GetAllRolesAsync(isAll);
        }
        
        public BandD.Serwis.ClassViewModel.Dictionaries.SlRoleView[] GetDataFromRole(string name, System.Nullable<bool> status) {
            return base.Channel.GetDataFromRole(name, status);
        }
        
        public System.Threading.Tasks.Task<BandD.Serwis.ClassViewModel.Dictionaries.SlRoleView[]> GetDataFromRoleAsync(string name, System.Nullable<bool> status) {
            return base.Channel.GetDataFromRoleAsync(name, status);
        }
        
        public bool RemoveElementFromRole(System.Guid id) {
            return base.Channel.RemoveElementFromRole(id);
        }
        
        public System.Threading.Tasks.Task<bool> RemoveElementFromRoleAsync(System.Guid id) {
            return base.Channel.RemoveElementFromRoleAsync(id);
        }
        
        public bool UpdateElementSlRole(BandD.Serwis.ClassViewModel.Dictionaries.SlRoleView role) {
            return base.Channel.UpdateElementSlRole(role);
        }
        
        public System.Threading.Tasks.Task<bool> UpdateElementSlRoleAsync(BandD.Serwis.ClassViewModel.Dictionaries.SlRoleView role) {
            return base.Channel.UpdateElementSlRoleAsync(role);
        }
        
        public bool AddElementToSlRole(BandD.Serwis.ClassViewModel.Dictionaries.SlRoleView role) {
            return base.Channel.AddElementToSlRole(role);
        }
        
        public System.Threading.Tasks.Task<bool> AddElementToSlRoleAsync(BandD.Serwis.ClassViewModel.Dictionaries.SlRoleView role) {
            return base.Channel.AddElementToSlRoleAsync(role);
        }
    }
}
